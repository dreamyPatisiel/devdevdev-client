name: Deploy CI
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  deploy:
    runs-on: ubuntu-latest
    # if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy to Vercel Action
        uses: BetaHuhn/deploy-to-vercel-action@latest
        with:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      # Github Repository Secrets를 통해 환경 변수 파일을 생성합니다.
      - name: Generate Environment Variables File for Production
        run: |
          echo "NEXT_PUBLIC_SERVICE_URL=${NEXT_PUBLIC_SERVICE_URL}" >> .env
          echo "NEXT_PUBLIC_CLIENT_ID=${NEXT_PUBLIC_CLIENT_ID}" >> .env
          echo "NEXT_PUBLIC_OAUTH_REDIRECT_ENDPOINT=${NEXT_PUBLIC_OAUTH_REDIRECT_ENDPOINT}" >> .env
        env:
          NEXT_PUBLIC_SERVICE_URL: ${{ secrets.NEXT_PUBLIC_SERVICE_URL }}
          NEXT_PUBLIC_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_CLIENT_ID }}
          NEXT_PUBLIC_OAUTH_REDIRECT_ENDPOINT: ${{secrets.NEXT_PUBLIC_OAUTH_REDIRECT_ENDPOINT}}
      # - name: Create .env file
      #   run: |
      #     jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
      #   env:
      #     SECRETS_CONTEXT: ${{ toJson(secrets) }}
